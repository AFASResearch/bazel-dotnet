name: .NET release CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@master
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.100" # SDK Version to use.

      - name: Build solution
        id: build
        run: dotnet publish BazelDotnet.sln --configuration Release

      - name: Version tag
        id: version
        run: >
          "::set-env name=TAG_VERSION::" + "${{ github.ref }}".Split("/")[-1]

      - name: Zip publish
        run: 7z a ${{ env.TAG_VERSION }}.zip src/Afas.BazelDotnet/bin/Release/netcoreapp3.1/publish/.

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: Release ${{ env.TAG_VERSION }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ env.TAG_VERSION }}.zip
          asset_name: ${{ env.TAG_VERSION }}.zip
          asset_content_type: application/zip